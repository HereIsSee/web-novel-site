using AutoMapper;
using Api.Models;
using Api.DTOs;

namespace Api.Profiles
{
    public class NovelProfile : Profile
    {
        public NovelProfile()
        {
            // Map from Entity -> DTO
            CreateMap<Novel, NovelReadDto>()
                .ForMember(dest => dest.Author,
                    opt => opt.MapFrom(src => src.User))
                .ForMember(dest => dest.Tags,
                    opt => opt.MapFrom(src => src.NovelTags.Select(nt => nt.Tag)));

            // Map from Create DTO -> Entity
            CreateMap<CreateNovelDto, Novel>()
                .ForMember(dest => dest.Id, opt => opt.Ignore()) //Generated by DB
                .ForMember(dest => dest.CreatedAt, opt => opt.Ignore())
                .ForMember(dest => dest.UpdatedAt, opt => opt.Ignore())
                .ForMember(dest => dest.Views, opt => opt.Ignore());

            CreateMap<UpdateNovelDto, Novel>()
                // Only overwrite fields that are non-null (partial update)
                .ForAllMembers(opt =>
                    opt.Condition((src, dest, srcMember) => srcMember != null));
        }
    }
}
